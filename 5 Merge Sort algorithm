//MERGER SORT
#include<iostream>
using namespace std;

void merge(int array[], int low, int mid, int high){
	int i, j, k;
	int n1 = mid - low + 1;
	int n2 = high - mid;
	
	int left[n1], right[n2];
	for(i = 0; i < n1; i++){
		left[i] = array[low + i];
	}
	for(j = 0; j < n2; j++){
		right[j] = array[mid + 1 + j];
	}
	i = 0;
	j = 0;
	k = low;
	while(i < n1 && j < n2){
		if(left[i] <= right[j]){
			array[k] = left[i];
			i++;
		}else {
			array[k] = right[j];
			j++;
		}
		k++;
	}
	while(i < n1){
		array[k] = left[i];
		i++;
		k++;
	}
	while(j < n2){
		array[k] = right[j];
		j++;
		k++;
	}	
	
}
void mergesort(int array[], int low, int high){
	if(low < high){
		int mid = (low + high) / 2;
	
		cout<<"mid: "<< mid <<"  ";
		
		mergesort(array, low, mid);
		mergesort(array, mid + 1, high);
		merge(array, low, mid, high);
	}
	
}
int main(){
	int array[] = {8, 9, 2, 4, 7};
	int size = sizeof(array) / sizeof(array[0]);
	int low = 0;
	int high = size - 1;
	//cout << low << " " << high;
	mergesort(array, low, high);{
		cout<<endl;
		cout<<endl;
		for(int i=0; i < size; i++){
			cout << array[i] <<"  ";
		}
	}
	return 0;
}
